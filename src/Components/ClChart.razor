@using System;
@using System.Text.Json;
@inject IJSRuntime JSRuntime
 
<canvas id="@Id"></canvas>
 
@code {
    public enum ChartType
    {
        Pie,
        Bar,
        Line
    }
 
    [Parameter]
    public string Id { get; set; }
 
    [Parameter]
    public ChartType Type { get; set; }
 
    [Parameter]
    public string[] Data { get; set; }
 
    [Parameter]
    public string[] BackgroundColor { get; set; }
 
    [Parameter]
    public string[] Labels { get; set; }
 
    protected override async Task OnAfterRenderAsync(bool firstRender) 
    {
        // Here we create an anonymous type with all the options 
        // that need to be sent to Chart.js
        var config = new
        {
            Type = Type.ToString().ToLower(),
            Options = new
            {
                Responsive = true,
                Scales = new
                {
                    Y = new {
                        BeginAtZero=true
                    }
                }
            },
            Data = new
            {
                Datasets = new[]
                {
                    new { Data = Data, BackgroundColor = BackgroundColor}
                },
                Labels = Labels,
                Fill = true
            }
        };
        var lala = JsonSerializer.Serialize(config);
        await JSRuntime.InvokeVoidAsync("setup", Id, config);
    }
}