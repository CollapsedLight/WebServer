@using System.Timers

<div name="@nameof(ClInput)" class="@(_class) flex grow">
    <input class="pl-1 flex-1 text-right w-28 font-mono bg-transparent border-b-2 focus:border-0 focus:border-outline border-background-outline" value="@(Value)" @oninput="@(OnValueChanged)"/>
</div>

@code {
    [Parameter]
    public string Value { get; set; }

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    /// <summary>
    ///     Capture additional html attributes
    /// </summary>
    [Parameter(CaptureUnmatchedValues = true)]
    public IReadOnlyDictionary<string, object>? AdditionalAttributes { get; set; }

    private string _class = string.Empty;

    protected override void OnParametersSet()
    {
        _class = string.Empty;
        if (AdditionalAttributes != null && AdditionalAttributes.TryGetValue("class", out var obj))
            _class = Convert.ToString(obj);
    }

    private async Task OnValueChanged(ChangeEventArgs args)
    {
        var value = args?.Value?.ToString();
        await ValueChanged.InvokeAsync(value);
    }
}